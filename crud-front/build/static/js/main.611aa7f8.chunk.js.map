{"version":3,"sources":["component/Table.js","App.js","index.js"],"names":["Table","useState","data","setData","firstName","lastName","email","phone","userData","setUserData","setUpdateId","onChange","e","target","name","value","deleteData","id","a","axios","delete","status","fetchData","get","res","updateData","record","_id","console","log","firsName","useEffect","className","scope","map","v","i","type","onClick","tabIndex","htmlFor","dataToSend","post","postData","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.611aa7f8.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst Table = ({ }) => {\r\n  let initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  }\r\n  const [data, setData] = useState([]);\r\n  const [userData, setUserData] = useState(initialValues);\r\n  const [updateId, setUpdateId] = useState()\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUserData({ ...userData, [name]: value });\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    async function postData() {\r\n      const dataToSend = {\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        phone: userData.phone\r\n      }\r\n      const res = await axios.post('http://localhost:5000/app/add', dataToSend);\r\n      if (res.status === 200) {\r\n        fetchData();\r\n      }\r\n    }\r\n\r\n    postData()\r\n  }\r\n\r\n  const deleteData = async (id) => {\r\n    const res = await axios.delete(`http://localhost:5000/app/delete/${id}`);\r\n    if (res.status === 200) {\r\n      fetchData()\r\n    }\r\n  }\r\n\r\n  async function fetchData() {\r\n    const res = await axios.get('http://localhost:5000/app/get');\r\n    setData(res.data)\r\n  }\r\n\r\n  const updateData = async (record) => {\r\n    setUpdateId(record._id)\r\n    console.log(record)\r\n    const updateData = {\r\n      firstName: record.firsName,\r\n      lastName: record.lastName,\r\n      email: record.email,\r\n      phone: record.phone\r\n    };\r\n\r\n    setUserData(updateData);\r\n  }\r\n\r\n  const onUpdate = async () => {\r\n    async function update() {\r\n      const dataToSend = {\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        phone: userData.phone\r\n      }\r\n      const res = await axios.put(`http://localhost:5000/app/update/${updateId}`, dataToSend);\r\n      if (res.status === 200) {\r\n        fetchData();\r\n      }\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className='text-center'>TO DO LIST</h3>\r\n      <br></br>\r\n      <div>\r\n\r\n      </div><div>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">FirstName</th>\r\n              <th scope=\"col\">LastName</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Contact</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data && data.map((v, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{v.firsName}</td>\r\n                  <td>{v.lastName}</td>\r\n                  <td>{v.email}</td>\r\n                  <td>{v.phone}</td>\r\n                  <td type=\"button\" className=\"btn btn-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={() => updateData(v)}>Edit</td>\r\n                  {/* <td onClick={() => deleteData(v._id)}>Delete</td> */}\r\n                  <td type=\"button\" className=\"btn btn-danger\" onClick={() => deleteData(v._id)}>Delete</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* <!-- Button trigger modal --> */}\r\n        <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n          Add Data\r\n        </button>\r\n\r\n        {/* Model */}\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">TO DO LIST</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n              </div>\r\n\r\n              {/* form */}\r\n              <form className=\"modal-form\">\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">First Name</label>\r\n                  <input onChange={onChange} name=\"firstName\" value={userData.firstName} type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Last Name</label>\r\n                  <input onChange={onChange} name=\"lastName\" value={userData.lastName} type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Email</label>\r\n                  <input onChange={onChange} name=\"email\" value={userData.email} type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Contact</label>\r\n                  <input onChange={onChange} name=\"phone\" value={userData.phone} type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                  <button onClick={onSubmit} type=\"button\" className=\"btn btn-primary\">Submit</button>\r\n                  {/* <button onClick={onUpdate} type=\"button\" className=\"btn btn-primary\">Update</button> */}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div></>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import { useState } from 'react';\r\nimport './App.css';\r\nimport Table from './component/Table';\r\nimport Update from './component/Update';\r\n\r\nfunction App() {\r\n  const [ updateData, setUpdateData ] = useState();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Table/>\r\n      {/* <Update/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}